#!/bin/bash

if [ -n "$DEBUG" ]; then
    PS4=':${LINENO}+'
    set -x
fi

if ! hash maws &>/dev/null; then
    echo "install maws"
    exit 1
fi

function get_p2a() {
    python3 <<EOF
import json
import requests

url = 'https://mozilla-it.github.io/itsre-accounts/accounts.json'
result = requests.get(url)
assert result.status_code == 200
p2a = json.loads(result.content)
hash = ' '.join([f'[{profile}]={account}' for profile,account in p2a.items()])
print(f'declare -A P2A=( {hash} )')
EOF
}
eval $(get_p2a)

function usage() {
    cat <<EOF
usage: $(basename $0) [-h] [-r SUFFIX] exec|login|role-arn account
EOF
    exit 1
}

function help() {
    for account in "${!P2A[@]}"; do
        accounts+=$'\n'" - $account"
    done
    cat <<EOF
usage: $(basename $0) [-h] [-r SUFFIX] exec|login|role-arn account

accounts: ${accounts}

positional:
  exec|login|role-arn   action to perform

optional:
  -r|--role-suffix      [admin|poweruser|readonly|viewonly]
                        default="admin"; choose the rule suffix
  -h|--help             show this help message and exit

EOF
    exit 1
}

function exec_action() {
    role_suffix="$1"; shift
    profile="$1"; shift
    role_arn=$(role_arn_action $role_suffix $profile)
    >&2 echo "login: $role_arn"
    echo "exec $profile $role_suffix $role_arn"
    if [[ -n "$AWS_SESSION_EXPIRATION" || $AWS_SESSION_EXPIRATION -lt $(date +%s) ]]; then
        result=$(maws --role-arn $role_arn)
        tmpfile=${result//* }
        for kv in $(cat $tmpfile | grep export | grep AWS | sed 's|export ||'); do
            export $kv
        done
    fi
    if [ -n "$1" ]; then
        $@
    fi
}

function login_action() {
    role_suffix="$1"; shift
    profile="$1"; shift
    role_arn=$(role_arn_action $role_suffix $profile)
    >&2 echo "login: $role_arn"
    echo "login $profile $role_suffix $role_arn"
    maws -w --role-arn $role_arn
}

function role_arn_action() {
    role_suffix="$1"; shift
    profile="$1"; shift
    echo "arn:aws:iam::${P2A[$profile]}:role/maws-$role_suffix"
}

role_suffix="admin" #default

while [[ $# -gt 0 ]]; do
    arg="${1}"

    case $arg in
    (exec|login|role-arn)
        action="${1}"
        shift
        ;;
    (-r|--role-suffix)
        role_suffix="${2}"
        shift
        shift
        ;;
    (-k|--kubeconfig)
        kubeconfig="${1}"
        shift
        shift
        ;;
    (-h|--help)
        help
        ;;
    (*)
        if [[ ${P2A["${1}"]+test} ]]; then
            profile="${1}"
            shift
            break
        else
            usage
        fi
        ;;
    esac
done


case "$action" in
(exec)
    exec_action $role_suffix $profile "$@"
   ;;
(login)
    login_action $role_suffix $profile "$@"
    ;;
(role-arn)
    role_arn_action $role_suffix $profile "$@"
    ;;
(*)
    usage
    ;;
esac

# split string based on delimiter in shell https://stackoverflow.com/a/15988793
# ${VAR#*SUB}  # will drop begin of string up to first occur of `SUB`
# ${VAR##*SUB} # will drop begin of string up to last occur of `SUB`
# ${VAR%SUB*}  # will drop part of string from last occur of `SUB` to the end
# ${VAR%%SUB*} # will drop part of string from first occur of `SUB` to the end
